name: iStore Intl Builder

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'build target ["x86_64", "rk35xx", "rk33xx", "rpi4", "all"]'
        required: true
        default: 'rk35xx'
env:
  TZ: Asia/Shanghai

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Detect build target
        id: set-matrix
        env:
          MATRIX_TARGET: ${{ github.event.inputs.target }}
        run: |
          if [ "x${MATRIX_TARGET}" = "x" -o "x${MATRIX_TARGET}" = "xall" ]; then \
            echo "matrix={\"target\":[\"x86_64\", \"rk35xx\", \"rk33xx\", \"rpi4\"]}" >> $GITHUB_OUTPUT; \
          else \
            targets=""; \
            for target in ${MATRIX_TARGET}; do \
              targets="$targets, \"$target\"";
            done; \
            echo "matrix={\"target\":[${targets#, }]}" >> $GITHUB_OUTPUT; \
          fi
  build:
    needs: matrix
    runs-on: ubuntu-latest
    name: iStore Intl for ${{ matrix.target }}
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 1

      - name: Import Env
        env:
          MATRIX_TARGET: ${{ matrix.target }}
        run: cat env/${MATRIX_TARGET}.env >> "$GITHUB_ENV"

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install binutils bzip2 xz-utils unzip git wget patch device-tree-compiler
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Install ORAS
        env:
          VERSION: 1.1.0
        run: |
          wget -O /tmp/oras.tar.gz "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p /tmp/oras-install/
          tar -zxf /tmp/oras.tar.gz -C /tmp/oras-install/
          sudo mv /tmp/oras-install/oras /usr/local/bin/
          rm -rf /tmp/oras.tar.gz /tmp/oras-install/

      - name: Download IB
        run: |
          mkdir dl
          wget -O dl/${IB_NAME}.tar.xz ${IB_URL}${IB_NAME}.tar.xz
          wget -O dl/sha256sums ${IB_URL}sha256sums
          wget -O dl/${MF_NAME} ${IB_URL}${MF_NAME}
         
          # cat src/target_rk35xx.manifest
          [ -s dl/sha256sums ]
          [ -s dl/${IB_NAME}.tar.xz ]
          [ -s dl/${MF_NAME} ]
          grep -Fq ${IB_NAME}.tar.xz dl/sha256sums
          #cd dl && sha256sum -c --ignore-missing --status sha256sums
          cd dl

      - name: Unpack IB
        run: |
          mkdir ib
          tar -C ib --strip-components=1 -xJf dl/${IB_NAME}.tar.xz
          cp -a src/* ib/
          ls patches/ | sort | xargs -n1 sh -c 'patch -p1 -d ib -i ../patches/$0'
          sed -i 's/ unofficial/ by xiaomeng9597/' ib/Makefile
          # sed -i "/.*uhttpd.*/d" ib/.config
          echo "CONFIG_TARGET_DEVICE_rockchip_rk35xx_DEVICE_jp_tvbox=y
          CONFIG_TARGET_DEVICE_rockchip_rk35xx_DEVICE_panther_x2=y" >> ib/.config
          # cat ib/.config
          # sed -i 's/6afc06598fa8e3bc907cff75f995f372df51d40a284e260de78a3421b1f18218/9b293ba9da352d39286cfd1d6bfa278c/g' ib/include/kernel-5.10
          sed -i "/.*CONFIG_ROCKCHIP_RGA2.*/d" ib/target/linux/rockchip/rk35xx/config-5.10
          sed -i "/.*CONFIG_ROCKCHIP_RGA2.*/d" ib/target/linux/rockchip/rk35xx/config-5.10.orig
          # sed -i "/.*CONFIG_ROCKCHIP_RGA2.*/d" ib/target/linux/rockchip/rk35xx/files/drivers/video/rockchip/Makefile
          # cat ib/target/linux/rockchip/rk35xx/config-5.10
          cat ib/target/linux/rockchip/rk35xx/files/drivers/video/rockchip/Makefile
          cp -f configfiles/rk3566-panther-x2.dts ib/target/linux/rockchip/dts/rk3568/rk3566-panther-x2.dts
          cp -f configfiles/rk3566-jp-tvbox.dts ib/target/linux/rockchip/dts/rk3568/rk3566-jp-tvbox.dts
          cp -f configfiles/rk3566-panther-x2.dtb ib/build_dir/target-aarch64_cortex-a53_musl/linux-rockchip_rk35xx/image-rk3566-panther-x2.dtb
          cp -f configfiles/rk3566-jp-tvbox.dtb ib/build_dir/target-aarch64_cortex-a53_musl/linux-rockchip_rk35xx/image-rk3566-jp-tvbox.dtb
          
          VERSION_VALUE=$(grep -o 'REVISION:=[0-9]\+' ib/include/version.mk | cut -d'=' -f2)
          echo "VERSION_VALUE2=$VERSION_VALUE" >> $GITHUB_ENV
          ls packages/all | cut -d "_" -f 1 | xargs -n1 sh -c 'rm ib/packages/$0*.ipk'
          cp packages/all/*.ipk ib/packages/
          mkdir -p ib/files
          cp -a files/all/* ib/files
          cp dl/${MF_NAME} ib/target.manifest
          case ${IB_URL} in
            *x86*)
                cp src/repositories_x86_64.conf ib/repositories.conf
                cp src/target_x86_64.manifest ib/custom.manifest
                cp -a files/x86_64/* ib/files
              ;;
            *rk35xx*)
                cp src/repositories_rk35xx.conf ib/repositories.conf
                cp src/target_rk35xx.manifest ib/custom.manifest
                cp -a files/rk35xx/* ib/files
              ;;
            *rk33xx*)
                cp src/repositories_rk33xx.conf ib/repositories.conf
                cp src/target_rk33xx.manifest ib/custom.manifest
                cp -a files/rk33xx/* ib/files
              ;;
            *bcm2711*)
                cp src/repositories_aarch64.conf ib/repositories.conf
                cp src/target_bcm2711.manifest ib/custom.manifest
                cp -a files/bcm2711/* ib/files
              ;;
          esac

      - name: Build
        run: |
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          cd ib && make -f multi.mk image_multi FILES="files"
          #cp -fpR /home/runner/work/iStoreNAS/iStoreNAS/ib/bin/targets/rockchip/rk35xx/istoreos-rockchip-rk35xx-lyt_t68m-squashfs-sysupgrade.img.gz ../build/t68m/istoreos-22.03.6-2024041213-t68m-squashfs.img.gz
          #cp /home/runner/work/iStoreNAS/iStoreNAS/ib/build_dir/target-aarch64_cortex-a53_musl/linux-rockchip_rk35xx/tmp/istoreos-rockchip-rk35xx-panther_x2-squashfs-sysupgrade.img.gz

      - name: Pack
        run: |
          cd ib
          make -f release.mk IB=1
          make -f multi.mk release_env >> "$GITHUB_ENV"
          # ls /home/runner/work/iStoreNAS/iStoreNAS/ib/build_dir/target-aarch64_cortex-a53_musl/linux-rockchip_rk35xx/tmp/
          ls /home/runner/work/iStoreNAS/iStoreNAS/ib/bin/targets/rockchip/rk35xx/
          mkdir -p ../build/iStoreNAS
          mkdir -p ../build/iStoreNAS/panther-x2
          mkdir -p ../build/iStoreNAS/jp-tvbox
          cp -fpR /home/runner/work/iStoreNAS/iStoreNAS/ib/bin/targets/rockchip/rk35xx/istoreos-rockchip-rk35xx-panther_x2-squashfs-sysupgrade.img.gz ../build/iStoreNAS/panther-x2/istoreos-22.03.6-${{ env.VERSION_VALUE2 }}-panther-x2-squashfs.img.gz
          cp -fpR /home/runner/work/iStoreNAS/iStoreNAS/ib/bin/targets/rockchip/rk35xx/istoreos-rockchip-rk35xx-jp_tvbox-squashfs-sysupgrade.img.gz ../build/iStoreNAS/jp-tvbox/istoreos-22.03.6-${{ env.VERSION_VALUE2 }}-jp-tvbox-squashfs.img.gz
          ls ../build/
          ls ../build/iStoreNAS/panther-x2
          ls ../build/iStoreNAS/jp-tvbox

      - name: Compare manifest
        run: |
          cd ib
          diff ../dl/${MF_NAME} ${IB_BIN_DIR}/${MF_NAME} || true

      - name: Upload
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_ok${{ env.FILE_DATE }}
          path: build

      - name: Upload2
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_build${{ env.FILE_DATE }}
          path: build/iStoreNAS